# Generated by Django 5.2 on 2025-04-16 19:09

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('quiz', '0010_course_allow_backtracking_course_is_timed_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AIAdoptionData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_domain', models.CharField(blank=True, max_length=100, null=True)),
                ('faculty', models.CharField(default='Unknown', max_length=100)),
                ('level_of_study', models.CharField(default='Unknown', max_length=100)),
                ('ai_familiarity', models.IntegerField(default=3)),
                ('uses_ai_tools', models.CharField(default='no', max_length=10)),
                ('tools_used', models.TextField(blank=True, null=True)),
                ('usage_frequency', models.CharField(default='never', max_length=20)),
                ('challenges', models.TextField(blank=True, null=True)),
                ('suggestions', models.TextField(blank=True, null=True)),
                ('improves_learning', models.CharField(default='no', max_length=10)),
                ('tools_count', models.IntegerField(default=0)),
                ('challenges_count', models.IntegerField(default=0)),
                ('adoption_level', models.CharField(default='low', max_length=20)),
                ('source', models.CharField(default='manual', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AIInsightTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='InsightTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='AIModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('algorithm', models.CharField(max_length=100)),
                ('accuracy', models.FloatField()),
                ('parameters', models.JSONField(default=dict)),
                ('model_file_path', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=False)),
                ('training_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='models', to='quiz.aiadoptiondata')),
            ],
        ),
        migrations.CreateModel(
            name='AIPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prediction_class', models.IntegerField(default=0)),
                ('success_probability', models.FloatField(default=0.0)),
                ('risk_probability', models.FloatField(default=0.0)),
                ('input_data', models.TextField()),
                ('feature_importances', models.TextField(blank=True, null=True)),
                ('explanation', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('model', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='predictions', to='quiz.aimodel')),
            ],
        ),
        migrations.CreateModel(
            name='AIInsight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('source_data', models.TextField(blank=True, null=True)),
                ('chart_data', models.TextField(blank=True, null=True)),
                ('chart_type', models.CharField(blank=True, max_length=50, null=True)),
                ('is_generated', models.BooleanField(default=False)),
                ('relevance_score', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insights', to='quiz.insighttopic')),
            ],
        ),
        migrations.CreateModel(
            name='NLQuery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.TextField()),
                ('processed_query', models.TextField(help_text='Query after processing')),
                ('response', models.TextField()),
                ('response_type', models.CharField(default='text', help_text='Type of response: text, chart, etc.', max_length=50)),
                ('chart_data', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nl_queries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'NL Query',
                'verbose_name_plural': 'NL Queries',
                'ordering': ['-created_at'],
            },
        ),
    ]
