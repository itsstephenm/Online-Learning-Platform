# Generated by Django 5.2 on 2025-04-09 19:29

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('quiz', '0007_questionattempt_resultanalytics'),
        ('student', '0003_student_ai_usage_count_student_last_ai_interaction_and_more'),
        ('teacher', '0002_teacher_salary'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdaptiveQuizSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_adaptive', models.BooleanField(default=False, help_text='Whether this course uses adaptive quizzing')),
                ('min_difficulty', models.PositiveIntegerField(default=1, help_text='Minimum difficulty level (1-10)')),
                ('max_difficulty', models.PositiveIntegerField(default=10, help_text='Maximum difficulty level (1-10)')),
                ('difficulty_step', models.FloatField(default=0.5, help_text='How much to adjust difficulty after each answer')),
                ('course', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='adaptive_settings', to='quiz.course')),
            ],
        ),
        migrations.CreateModel(
            name='ContentRecommendation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('resource_type', models.CharField(choices=[('course', 'Course'), ('topic', 'Topic'), ('article', 'Article'), ('video', 'Video'), ('exercise', 'Exercise'), ('book', 'Book'), ('other', 'Other')], max_length=50)),
                ('url', models.URLField(blank=True, help_text='Optional URL to external resource', null=True)),
                ('relevance_score', models.FloatField(default=0.0, help_text='Relevance score (0-1)')),
                ('is_viewed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='quiz.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='student.student')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionExplanation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('explanation_text', models.TextField(help_text='Detailed explanation of the question and correct answer')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='explanations', to='quiz.question')),
            ],
        ),
        migrations.CreateModel(
            name='ReferenceDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('document_file', models.FileField(upload_to='reference_documents/')),
                ('extracted_text', models.TextField(blank=True, null=True)),
                ('file_type', models.CharField(choices=[('pdf', 'PDF'), ('docx', 'Word Document'), ('txt', 'Text File')], max_length=10)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reference_documents', to='quiz.course')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teacher.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='StudentFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_text', models.TextField(help_text="AI-generated feedback based on the student's answer")),
                ('is_correct', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('question_attempt', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='quiz.questionattempt')),
            ],
        ),
        migrations.CreateModel(
            name='StudentSkillLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_level', models.FloatField(default=5.0, help_text='Current difficulty level (1-10)')),
                ('confidence', models.FloatField(default=0.5, help_text='System confidence in the current level (0-1)')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skill_levels', to='student.student')),
            ],
            options={
                'unique_together': {('student', 'course')},
            },
        ),
    ]
